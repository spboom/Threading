//Publisher
-(void)runTest
{
    void *context = zmq_ctx_new ();
    void *publisher = zmq_socket (context, ZMQ_PUB);
    int rc = zmq_bind(publisher, "epgm://en0;224.0.0.251:5555");
 
    int rcvval = 17792;
   
    int m = zmq_setsockopt(publisher, ZMQ_SNDBUF, &rcvval, sizeof rcvval);
    if(m==-1)
    {
        printf("%s", strerror(errno));
    }
    else
    {
        printf("OK\n");
    }
   
    int optval = 500000;
//    m =  zmq_setsockopt(publisher, ZMQ_RATE, &optval, sizeof(optval));
//    if(m==-1)
//    {
//        printf("%s", strerror(errno));
//    }
//    else
//    {
//        printf("OK\n");
//    }
   
    optval = 1;
    m =  zmq_setsockopt(publisher, ZMQ_RECOVERY_IVL, &optval, sizeof(optval));
    if(m==-1)
    {
        printf("%s", strerror(errno));
    }
    else
    {
        printf("OK\n");
    }
   
//    optval = 200000;
//    m =  zmq_setsockopt(publisher, ZMQ_SNDHWM, &optval, sizeof(optval));
//    if(m==-1)
//    {
//        printf("%s", strerror(errno));
//    }
//    else
//    {
//        printf("OK\n");
//    }
   
   
    //Some test data
    char test[1000000];
    strcpy(test, "aaaaabvbvbbvbvbvbvbvbvbvbbvbvbvbdvbhdvbdvhbdvhdbvhdbvhdbvhdbvdhvbdhvbdhvbdhvbdhvbdhvbdhvbdhhvbdhvbdh");
    char* str = "aaaaabvbvbbvbvbvbvbvbvbvbbvbvbvbdvbhdvbdvhbdvhdbvhdbvhdbvhdbvdhvbdhvbdhvbdhvbdhvbdhvbdhvbdhhvbdhvbdh";
    for(int i = 0; i < 5; i++)
    {
        strcat(test, str);
    }
    printf("\n%d\n", strlen(test));
   
    for (int j = 0; j < 1000; j++){
    int sent_size = s_send(publisher, test);
   
    if(sent_size > 0)
    {
        printf("Sent succesfully. Sent size is: %d\n", sent_size);
    }
    else
    {
        printf("Nothing was sent\n");
    }
    }
   
    sleep(80);
    zmq_close (publisher);
    zmq_ctx_destroy (context);
}
 
 
//Subscriber
-(void)runTest
{
    void *context = zmq_ctx_new ();
    void *subscriber = zmq_socket (context, ZMQ_SUB);
    int rc = zmq_connect(subscriber, "epgm://en0;224.0.0.251:5555");
    assert (rc == 0);
   
    rc = zmq_setsockopt (subscriber, ZMQ_SUBSCRIBE,
                         "", 0);
    assert (rc == 0);
 
    int rcvval = 10000;
    int m = zmq_setsockopt(subscriber, ZMQ_RCVBUF, &rcvval, sizeof rcvval);
    if(m==-1)
    {
        printf("%s", strerror(errno));
    }
    else
    {
        printf("OK\n");
    }
   
    int optval = 250000;
    m =  zmq_setsockopt(subscriber, ZMQ_RCVHWM, &optval, sizeof(optval));
    if(m==-1)
    {
        printf("%s", strerror(errno));
    }
    else
    {
        printf("OK\n");
    }
   
//    optval = 1;
//    m =  zmq_setsockopt(subscriber, ZMQ_RECOVERY_IVL, &optval, sizeof(optval));
//    if(m==-1)
//    {
//        printf("%s", strerror(errno));
//    }
//    else
//    {
//        printf("OK\n");
//    }
   
//    optval = 500000;
//    m =  zmq_setsockopt(subscriber, ZMQ_RATE, &optval, sizeof(optval));
//    if(m==-1)
//    {
//        printf("%s", strerror(errno));
//    }
//    else
//    {
//        printf("OK\n");
//    }
   
    gettimeofday(&starttime,0x0);
   
   
    for (int i = 0; i < 1000; i++){
        char *bytesChar = s_recv(subscriber);
        printf("Received: %d . bytes: %d \n", i, strlen(bytesChar));
    }
   
    gettimeofday(&endtime,0x0);
    timeval_diff(&timediff,&endtime,&starttime);
   
    printf("%d seconds and %d\n", timediff.tv_sec, timediff.tv_usec);
   
    zmq_close (subscriber);
    zmq_ctx_destroy (context);
}